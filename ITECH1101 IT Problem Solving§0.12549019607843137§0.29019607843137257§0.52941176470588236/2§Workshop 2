#Workshop 2

**Rapunzel**

Trapped in a tower, with a rope half the height, half the height is still too far to fall. How do we escape?

> If you only have a hammer everything looks like a nail -- Abraham Maslow

**define a problem**

>the formulation of the problem is often more essential than its solution which may be merely a matter of mathematical or experimental skill --Albert Einstein.

###processes of problem solving

**loop processes**

- Identify: find a problem
- Define: determine what the problem is
- Explore: check information, form solutions
- Action: implement and test solutions
- Look Back: evaluate the solutions and the state of the problem/project
- (Repeat)

**8 Step (corporate)**

1. make team
2. describe problem
3. contain the problem (scope)
4. identify, define, and verify the root cause of the problem
5. choose corrective actions
6. implement/validate the permanent corrective actions
7. prevent recurrence
8. reward the team

**finding the root cause**

> theories may abound but hard evidence must be found

definitions need to be clear, concise and unambiguous. 

**5 w's**

- Who
- What
- When
- Why
- hwhy not hwow?

###Library Problem

a library experienced an earthquake in which all of their 10,000 books are scattered. the books need to be sorted in alphabetical order.

**Definition**

- Who: library, library staff, library patrons. Need to define resources, how many workers, can community volunteers be sought, who owns the library, what's the budget?
- What: reshelve books, sort books. Find an efficient way to sort them with resources.
- When: ASAP. Non-negotiable
- Where: at the library, the sorting most likely needs to be completed on site.
- Why: the books at the library need to be indexed. or it's not a library.

**concisely**

Develop a scheme to sort 10,000 library books efficiently.

**solution**

Personally I'd quicksort them because they're already scrambled and because splitting the problem allows multiple librarians to work on different ends of it.

:D https://en.wikipedia.org/wiki/Quicksort

###Problem Solving Strategies / Techniques

log<sub>2</sub> 100 = 7

efficiency = how many questions to solve a problem.

**trial and error**
- random guesses
- useful when the problem and goal are unknown
- uses repeated attempts
- can be valuagble when risk is lwo and feedback is immediate
- the found solution may not be the most efficient or appropriate
- sucks

**goobix problem**

http://www.goobix.com/games/guess-the-number/

basically mastermind. 4 digits, told how many right, how many right in wrong place. 
*spend more time on this :D*

**algorithms**
- step by step instructions for solving a problem
- the right algorithm is one that is guarateed to solve the problem
- more efficient algorithms may be available
- how traditional computer programs are written
- eg: bubble sort, binary search, quicksort
- think of them as a recipie

**heuristic**
- using shortcuts based on previous experience or expertise
- not guaranteed to produce a solution and any solution may not be optimal
- best used when there's no algorithm to produce a certain solution or when processing is slow
- used in AI
- can be thought of as working backwards
- many strategies for forming heuristics
- chunking: how can I break these problems down?
- pattern recognition: what patterns are in the data?
- stepping stone: what gets me there?
- retrograde analysis: how did/does this happen?

**graphical model**
- some solutions are more apparent when using a visual approach
- can be used to improve logical reasoning
- many to choose from:
- flowchart
- graph
- table
- diagrams
- physical models

###Non-Routine/Complex problems
- when a problem gets too large to solve with one strategy or approach
- break it down into smaller problems or tasks
- any remaining problems that are complex should be broken down
- solve the sovlable
- achieve the achievable
- complete when all sub tasks together provide a solution to the entire problem















